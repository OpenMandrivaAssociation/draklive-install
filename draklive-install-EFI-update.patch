--- draklive-install-1.41/draklive-install	2014-09-16 19:26:45.000000000 +0100
+++ draklive-install-1.41/draklive-install~	2014-12-23 11:19:08.696963210 +0000
@@ -44,6 +44,7 @@
 
 install_live();
 
+
 sub install_live() {
     my $in = 'interactive'->vnew('su');
     my $running_wm = any::running_window_manager();
@@ -448,6 +449,8 @@
         # GRUB_DISABLE_RECOVERY
         # GRUB_GFXMODE
     );
+#Extra grub2 flags can be added here
+    my %grub2_flags = ('--bootloader-id' => { 'type' => '=', 'value' => 'openmandriva'});
     my @boot_devices = map { $_->{'file'} } @{$all_hds->{'hds'}};
     my %boot_devices_info = map { $_->{'file'} => format_hdd_info($_) } @{$all_hds->{'hds'}};
 
@@ -461,6 +464,8 @@
             { label => N("Bootloader"), title => 1 },
             { label => N("Boot device"), val => \$install_device, list => \@boot_devices, allow_empty_list => 1,
               format => sub { $boot_devices_info{$_[0]} } },
+	    #Extra grub2 entries can be added here
+            { label => N("Bootloader-id"), val => \$grub2_flags{'bootloader_id'}->{'value'}},               
             { label => N("Main options"), title => 1 },
             { label => N("Delay before booting default image"), val => \$options{'GRUB_TIMEOUT'}->{'value'} },
             { text => N("Disable UUID"), val => \$options{'GRUB_DISABLE_LINUX_UUID'}->{'value'}, type => 'bool', advanced => 1 },
@@ -469,24 +474,52 @@
         # Now let's rock and roll!
         my $_wait = $in->wait_message(N("Bootloader"), N("Please wait while the bootloader is being installed..."));
 
-        # Write down the options
-        if (!update_grub_options('/mnt/install/etc/default/grub', \%options)) {
+        # Write down the options NOTE CC CHANGED PATH HERE
+        if (!update_grub_options('/etc/default/grub', \%options)) {
             $in->ask_warn(N("Warning"), N("Failed to update Grub2 configuration:") . " $!\n" . N("Continuing with default settings."));
         }
 
-        # To install Grub2 we chroot into the freshly installed ROSA and perform installation from there,
+        # To install Grub2 we chroot into the freshly installed OpenMandriva and perform the installation from there,
         # otherwise strange errors happen.
-        # So, first we try to prepare chroot environment by mounting system-related mount points
-        if (system('mount --bind /proc /mnt/install/proc && mount --bind /sys /mnt/install/sys') != 0) {
+        # So, first we determine whether we are on an EFI system by checking to see if the efivars filesystem is mounted. 
+        # If it is we need to mount the EFI (ESP) partition AFTER chrooting. In addition the bootloader-id flag to grub2-install is generated.
+        # Amongst other things the bootloader-id flag generates an entry for the efibootmgr utility which creates a new boot entry loaded with
+        # the correct parameters to boot the system NO error checking is performed on this variable if it is incorrect the system will fail to boot.
+
+        $sys_is_efi=(system('/bin/sh -c mount | grep efivarfs')); 
+            # No EFI filesystem
+        if ($sys_is_efi == 0) {
+	    for $gc ( keys %grub2_flags ) {
+	      $go =  $grub2_flags{'--bootloader-id'}{'type'};
+	      $ga = $grub2_flags{'--bootloader-id'}{'value'};
+	      $g2arg = "$gc$go$ga";
+	      print "$g2arg";
+		last;
+	    }
+	$sys_esp_mounted=(system("/bin/sh -c mount | grep '\/mnt\/install\/boot\/efi'"));
+            # The esp directory must not be mounted prior to the chroot otherwise grub2 will use incorrect uuid's for the grub.cfg file.
+	if ($sys_esp_mounted == 0) {
+	    (system('umount /mnt/install/boot/efi'));
+	    }
+        }
+	# So, first we try to prepare chroot environment by mounting system-related mount points.
+        if (system('mount --bind /proc /mnt/install/proc && mount --bind /sys /mnt/install/sys && mount -t efivarfs /sys/firmware/efi/efivars /mnt/install/sys/firmware/efi/efivars') != 0) {
             # Failure, ask what to do now (exit Grub2 installation or try again)
             # Reuse $install_err as user's reply: Yes -> $install_err==1 -> repeat the loop
             # (Would like to use redo here, but it would skip the continue block, and I need it to run)
-            $install_err = $in->ask_yesorno(N("Error"), N("Failed to prepare chroot for installing Grub2:") . " $!\n" . N("Try again?"), 1);
+	     $install_err = $in->ask_yesorno(N("Error"), N("Failed to prepare chroot for installing Grub2:") . " $!\n" . N("Try again?"), 1);
             next;
         }
 
+        # First we must be sure that we can mount EFI partiton r/w to do this the os-prober ro mount must be removed.
+        # If the efivars fs is mounted on /sys/firmware/efi then we must also mount it on the chroot 
+        # to allow grub2-install to create a bootloader entry.
         # Now install the Grub2 itself and create menu configuration for it.
-        $install_err = system("chroot /mnt/install /bin/sh -c 'echo boot=$install_device > /boot/grub2/drakboot.conf && grub2-install $install_device && grub2-mkconfig -o /boot/grub2/grub.cfg'");
+        if ($sys_is_efi == 0) {
+    	    system('umount /run/os-prober/dev/* && mount -t efivarfs /sys/firmware/efi/efivars /mnt/install/sys/firmware/efi/efivars');
+    	    $install_err = system("chroot /mnt/install /bin/sh -c 'mount -t vfat /dev/sda1 /boot/efi && echo boot=$install_device > /boot/grub2/drakboot.conf && grub2-install $g2arg $install_device && grub2-mkconfig -o /boot/grub2/grub.cfg'");}
+        else {
+    	    $install_err = system("chroot /mnt/install /bin/sh -c 'echo boot=$install_device > /boot/grub2/drakboot.conf && grub2-install $install_device && grub2-mkconfig -o /boot/grub2/grub.cfg'");}
         if ($install_err != 0) {
             $install_err = $in->ask_yesorno(N("Error"), N("Failed to install Grub2:") . " $!\n" . N("Try again?"), 1);
             next;
